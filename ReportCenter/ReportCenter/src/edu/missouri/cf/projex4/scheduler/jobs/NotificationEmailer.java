package edu.missouri.cf.projex4.scheduler.jobs;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.mail.MessagingException;

import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;

public class NotificationEmailer extends ProjexEmailerJob {

	final String sql1 = "select id, emailaddress from userdetails where notifybyemail = 1 and isactive = 1";
	
	// final String sql1 = "select id, emailaddress from userdetails where isactive = 1";

	final String sql2 = "SELECT A.ID, A.NOTIFIED, A.NOTIFICATIONTEXT, A.NOTIFYINGUSERID, AP.NAME AS APPLICATION, A.DESCRIPTION, A.UUID, A.OBJECTCLASS FROM (( "
			+ "	 SELECT N.ID, N.NOTIFIED, N.NOTIFICATIONTEXT, N.NOTIFYINGUSERID, AN.APPLICATIONID, NT.DESCRIPTION, OB.UUID, OC.OBJECTCLASS "
			+ "  FROM NOTIFICATIONS N " + "  INNER JOIN APPLICATIONNOTIFICATIONS AN ON AN.ID = N.APPLICATIONNOTIFICATIONID "
			+ "  INNER JOIN NOTIFICATIONTYPES NT ON NT.ID = AN.NOTIFICATIONTYPEID AND NT.ISACTIVE = 1 "
			+ "  INNER JOIN OBJECTS OB ON OB.ID = N.OBJECTID INNER JOIN OBJECTCLASSES OC ON OB.OBJECTCLASSID = OC.ID WHERE N.TARGETUSERID = ?"
			+ ") UNION ALL ( "
			+ "  SELECT N.ID, N.NOTIFIED, N.NOTIFICATIONTEXT, N.NOTIFYINGUSERID, AN.APPLICATIONID, NT.DESCRIPTION, OB.UUID, OC.OBJECTCLASS "
			+ "  FROM NOTIFICATIONS N " + "  INNER JOIN APPLICATIONNOTIFICATIONS AN ON AN.ID = N.APPLICATIONNOTIFICATIONID"
			+ "  INNER JOIN NOTIFICATIONTYPES NT ON NT.ID = AN.NOTIFICATIONTYPEID AND NT.ISACTIVE = 1 "
			+ "  INNER JOIN USERNOTIFICATIONSETTINGS US ON US.USERID = ? AND US.APPLICATIONNOTIFICATIONID = N.APPLICATIONNOTIFICATIONID "
			+ "      AND US.ISACTIVE = 1 AND US.SETTINGVALUE = 'ALL' " + "  INNER JOIN OBJECTS OB ON OB.ID = N.OBJECTID "
			+ "        INNER JOIN OBJECTCLASSES OC ON OB.OBJECTCLASSID = OC.ID " + "  WHERE N.TARGETUSERID IS NULL "
			+ ") UNION ALL ("
			+ " SELECT N.ID, N.NOTIFIED, N.NOTIFICATIONTEXT, N.NOTIFYINGUSERID, AN.APPLICATIONID, NT.DESCRIPTION, OB.UUID, OC.OBJECTCLASS "
			+ " FROM NOTIFICATIONS N " + " INNER JOIN APPLICATIONNOTIFICATIONS AN ON AN.ID = N.APPLICATIONNOTIFICATIONID "
			+ " INNER JOIN NOTIFICATIONTYPES NT ON NT.ID = AN.NOTIFICATIONTYPEID AND NT.ISACTIVE = 1 "
			+ " INNER JOIN USERNOTIFICATIONSETTINGS US ON US.USERID = ? AND US.APPLICATIONNOTIFICATIONID = N.APPLICATIONNOTIFICATIONID AND "
			+ "     US.ISACTIVE = 1 AND US.SETTINGVALUE = 'SITES' " + " INNER JOIN OBJECTS OB ON OB.ID = N.OBJECTID "
			+ " INNER JOIN OBJECTCLASSES OC ON OB.OBJECTCLASSID = OC.ID "
			+ " INNER JOIN PROJECTOBJECTHIERARCHY POH ON POH.ID = N.OBJECTID " + " INNER JOIN PROJECTS P ON P.ID = POH.REFOBJECTID "
			+ " INNER JOIN CAMPUSUSERS CU ON CU.USERID = US.USERID AND CU.CAMPUSID = P.CAMPUSID " + " WHERE N.TARGETUSERID IS NULL "
			+ ") UNION ALL ( "
			+ " SELECT N.ID, N.NOTIFIED, N.NOTIFICATIONTEXT, N.NOTIFYINGUSERID, AN.APPLICATIONID, NT.DESCRIPTION, OB.UUID, OC.OBJECTCLASS "
			+ " FROM NOTIFICATIONS N " + " INNER JOIN APPLICATIONNOTIFICATIONS AN ON AN.ID = N.APPLICATIONNOTIFICATIONID "
			+ " INNER JOIN NOTIFICATIONTYPES NT ON NT.ID = AN.NOTIFICATIONTYPEID AND NT.ISACTIVE = 1 "
			+ " INNER JOIN USERNOTIFICATIONSETTINGS US ON US.USERID = ? AND "
			+ " US.APPLICATIONNOTIFICATIONID = N.APPLICATIONNOTIFICATIONID AND US.ISACTIVE = 1 AND US.SETTINGVALUE = 'ASSIGNED' "
			+ " INNER JOIN OBJECTS OB ON OB.ID = N.OBJECTID " + " INNER JOIN OBJECTCLASSES OC ON OB.OBJECTCLASSID = OC.ID "
			+ " INNER JOIN PROJECTOBJECTHIERARCHY POH ON POH.ID = N.OBJECTID "
			+ " INNER JOIN PROJECTASSIGNMENTS PA ON PA.PROJECTID = POH.REFOBJECTID AND PA.USERID = US.USERID "
			+ " WHERE N.TARGETUSERID IS NULL )) A " + " INNER JOIN APPLICATIONS AP ON AP.ID = A.APPLICATIONID "
			+ " LEFT OUTER JOIN USERNOTIFICATIONEMAILS UNE ON UNE.NOTIFICATIONID = A.ID AND UNE.USERID = ? "
			+ " LEFT OUTER JOIN USERNOTIFICATIONACKS UNA ON UNA.NOTIFICATIONID = A.ID AND UNA.USERID = ? "
			+ " WHERE UNE.EMAILED IS NULL AND UNA.ACKNOWLEDGED IS NULL AND NOTIFIED > (SYSDATE - 1)";

	public NotificationEmailer() {
	}

	@Override
	public void execute(JobExecutionContext context, Connection conn)
			throws JobExecutionException, SQLException, MessagingException {

		setTemplate("NOTIFICATIONS");
		setSubject("MU Projex - Changes to your Projects have occurred.");
		setBody();

		try (PreparedStatement stmt1 = conn.prepareStatement(sql1); PreparedStatement stmt2 = conn.prepareStatement(sql2)) {

			try (ResultSet rs1 = stmt1.executeQuery()) {

				connect();

				while (rs1.next()) {

					String userId = rs1.getString("ID");
					String emailAddress = rs1.getString("EMAILADDRESS");

					stmt2.setString(1, userId);
					stmt2.setString(2, userId);
					stmt2.setString(3, userId);
					stmt2.setString(4, userId);
					stmt2.setString(5, userId);
					stmt2.setString(6, userId);

					try (ResultSet rs2 = stmt2.executeQuery()) {

						if (rs2.next()) {

							setTo(emailAddress);
							send();

						}
					}
				}

				disconnect();
			}
		}
	}
}
