CREATE SEQUENCE PROPERTYSEQ;
CREATE TABLE PROPERTIES (
	ID VARCHAR2(10) NOT NULL,
	ROWSTAMP VARCHAR2(10) NOT NULL,
	REFIDTYPE VARCHAR2(20) NOT NULL,
	REFID VARCHAR2(10),
	PROPERTY VARCHAR2(500) NOT NULL,
	VALUE VARCHAR2(500),
	PRIMARY KEY (ID)
);

CREATE OR REPLACE TRIGGER PROPERTIES_T 
BEFORE INSERT OR UPDATE ON PROPERTIES
FOR EACH ROW
DECLARE
	C NUMBER;
	OBJECTMODIFICATION EXCEPTION;
	INVALIDREFERENCE EXCEPTION;
BEGIN
	
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;
	
	C := 0;
	
	SELECT 1 INTO C FROM DUAL WHERE 
		(:NEW.REFIDTYPE = 'SYSTEM' AND :NEW.REFID IS NULL) OR
		(:NEW.REFIDTYPE = 'CAMPUS' AND EXISTS (SELECT ID FROM CAMPUSES WHERE ID = :NEW.REFID AND ISACTIVE = 1)) OR
		(:NEW.REFIDTYPE = 'OBJECTCLASS' AND EXISTS (SELECT ID FROM OBJECTCLASSES WHERE ID = :NEW.REFID)) OR
		(:NEW.REFIDTYPE = 'USER' AND EXISTS (SELECT ID FROM USERS WHERE ID = :NEW.REFID AND ISACTIVE = 1)) OR
		(:NEW.REFIDTYPE = 'SECURITYGROUP' AND EXISTS (SELECT ID FROM SECURITYGROUPS WHERE ID = :NEW.REFID AND ISACTIVE = 1));
		
	IF NOT C = 1 THEN
		RAISE INVALIDREFERENCE;
	END IF;

    SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;

	EXCEPTION 
		WHEN OBJECTMODIFICATION THEN
			RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another user');
		WHEN INVALIDREFERENCE THEN
			RAISE_APPLICATION_ERROR(-20003,'Invalid Reference ID');
	   
END;
/
