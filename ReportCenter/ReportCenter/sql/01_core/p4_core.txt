/*

P4 CORE MODULE 
CCG - 20110913

P4 CORE IS BASED ON THE FOLLOWING PRINCIPLES :

	1. THERE IS ONE TABLE FOR HIERARCHICAL RELATIONSHIPS - OBJECTHIERARCHY.
	2. THE PRIMARY HIERARCHICAL RELATIONSHIP IS MAINTAINED IN THE OBJECTHIERARCHY TABLE, 
		INVERSE RELATIONSHIPS CAN BE DETERMINED BY QUERYING INVERSELY.
	3. FIELDS COMMON TO ALL HIERARCHICAL DATA ARE KEPT IN ONE TABLE - OBJECT.
	4. FIELDS UNIQUE TO THE HIERARCHICAL DATA OBJECTS ARE KEPT IN A SEPARATE TABLE (SUBORDINATE TABLE).
	5. COMMON FUNCTIONALITY SHOULD BE TIED TO THE OBJECT TABLE NOT THE SUBORDINATE TABLE.
	6. UNIQUE FUNCTIONALITY SHOULD BE TIED TO THE SUBORDINATE TABLE, NOT THE OBJECT TABLE.
	7. THERE SHOULD BE A SINGLE PRIMARY KEY VALUE ON ALL TABLES.
	8. WHEN SAVING A DATA OBJECT, DATA SHOULD BE SAVED IN THE FOLLOWING ORDER AS A SINGLE TRANSACTION -
		IF INSERTING - THE UNIQUE OBJECT ID VALUE MUST BE RETRIEVED FIRST FROM THE OBJECTSEQ SEQUENCE.
		THEN INSERT OR UPDATE OBJECT DATA FIRST, SUBORDINATE DATA SECOND.  
		OBJECTHIERARCHY DATA SHOULD BE SAVED THIRD ON AN INSERT.
		IN ALL BUT EXCEPTIONAL CASES, THERE SHOULD BE NO UPDATES OF OBJECTHIERARCHY.
	9. A ROWSTAMP FIELD TO CONTROL CONCURRENT MODIFICATION SHOULD BE PLACED ON ALL NON-SUBORDINATE TABLES.
	10.  THE ROWSTAMP OBJECT ON OBJECT IS TO BE USED FOR ALL SUBORDINATE TABLES.
	11.  THE ROWSTAMP FIELD SHOULD BE POPULATED BY A TRIGGER DURING INSERT OR UPDATE.
	12.  THE ROWSTAMP FIELD SHOULD BE CHECKED UPON UPDATE.  UPDATES SHOULD FAIL IF ROWSTAMP HAS BEEN 
		MODIFIED SINCE THE DATA WAS LOADED.
	13.  DELETES SHOULD ONLY BE DONE IN EXCEPTIONAL CASES. INSTEAD OF
		DELETING ALL OBJECTS SHOULD BE STATUSED TO A DELETED STATE.

	NAMING CONVENTIONS - 
		
		TABLES ARE NAMED IN THE PLURAL, EXCEPT WHERE A PLURAL NAME WOULD IMPLY 
		PARALLEL OR VERSIONING FUNCTIONALITIES,  I.E.  OBJECTS IS PLURAL,  
		OBJECTSTATUSHISTORY AND OBJECTHIERARCHY ARE NOT.

		THE PRIMARY KEY FIELD ON A NON-SUBORDINATE TABLE IS NAMED AFTER THE 
		SINGULAR CASE OF THE TABLE OBJECT FOLLOWED BY ID.  I.E.  THE PRIMARY KEY 
		FIELD OF USERS IS USERID.

		THE SEQUENCE USED TO POPULATE THE PRIMARY KEY FIELD IS NAMED AFTER THE
		SINGULAR CASE OF THE TABLE OBJECT FOLLOWED BY SEQ.  I.E. THE PRIMARY KEY 
		SEQUENCE OF OBJECTHIEARCHY IS OBJECTHIEARCHYSEQ, WHILE THE PRIMARY KEY 
		FIELD IS OBJECTHIEARCHYID.  A UNIQUE SEQUENCE IS NOT REQUIRED FOR EVERY 
		TABLE REQUIRING A PRIMARY KEY.  A SEQUENCE IN COMMON MAY BE USED TO 
		POPULATE MULTIPLE TABLES.  THIS SEQUENCE TO BE USED SHOULD BE NOTED IN 
		THE COMMENTS DEFINING THE TABLE.

		TRIGGERS SHOULD BE THE TABLENAME ENDED WITH _T.  UNIQUE CONSTRAINTS SHOULD
		BE THE TABLENAME ENDED WITH _U.  FOREIGN KEY CONSTRAINTS SHOULD BE THE 
		TABLENAME ENDED WITH _FK.  MULTIPLE TRIGGERS AND CONSTRAINTS SHOULD BE 
		ENDED WITH A NUMBER, I.E _FK1.

		SPECIFIC FIELD CONVENTIONS

		1. OBJECTID IS THE UNIQUE ID VALUE FOR AN OBJECT. THE SAME ID IS USED
		   OBJECT TABLE, THE OBJECTHIERARCHY TABLE, AND THE SEPARATE TABLE.
		2. TABLES SHOULD BE JOINABLE ON LIKE NAMED FIELDS.
		3. TABLES HAVING A KEY FIELD THAT IS JOINABLE TO MULTIPLE
		   TYPES SHOULD HAVE A FIELD FOR SPECIFYING THAT TYPE.
		4. SYSTEM DEFINED DATE FIELDS SHOULD BE THE PAST TENSE OF THE VERB, I.E MODIFIED NOT MODIFICATIONDATE
		5. SYSTEM DEFINED ACTOR FIELDS SHOULD BE THE DATE FIELD FOLLOWED BY BY, I.E. MODIFIEDBY
		6. BOOLEAN VALUES SHOULD BE DEFINED AS NUMBER(1) NOT NULL, DEFAULT TO 0 (FALSE)
		   AND SHOULD BE NAMED POSITIVELY AND IN THE PRESENT TENSE FOR IT'S ACTION , I.E. 
		   ISACTIVE OR INWORKFLOW - NOT INACTIVE OR ISINACTIVE.

*/

/* 
	SECURITY QUESTIONS - 

	1.  HOW DO WE VERIFY USERS AND PASSWORDS - 

		CURRENTLY IN PROJEX3 WE USE ORACLE PASSWORDS AND ORACLE SECURITY --
		THIS IS NOT PRACTICAL IF WE WANT TO ALLOW OUTSIDE USER ACCESS.

		WE WILL NEED TO HAVE LOCAL PASSWORDS FOR SYSTEM ACCOUNT USERS.  

		UM EMPLOYEES CAN AUTHENTICATE VIA LDAP -

		   TRICKY IN THAT WE NEED TO CHECK AGAINST ALL CAMPUS LDAP SERVERS 
		   - UMC, UMKC, UMSL, MST, UMSYSTEM, AND TIGERS.
		   NEED TO FIND OUT WHETHER STUDENTS AT OTHER CAMPUSES ARE ON THEIR
		   OWN LDAP SERVERS.  WHAT HAPPENS WHEN STUDENTS LEAVE?
		   DOIT SECURITY GUIDELINES SAY PASSWORDS SHOULD BE AUTHENTICATED
		   TO THEIR SERVERS. 

		WHAT ABOUT OUTSIDE USERS?

		   FOR SHAREPOINT ACCESS NOW, A UMC ACCOUNT IS CREATED FOR EACH OUTSIDE USER.
		   IF WE SHIFT FROM SHAREPOINT, THEN WILL DOIT STILL WANT TO CREATE ALL THOSE 
		   USERS FOR US?  I WOULD LIKE TO WRITE THE SYSTEM NOT TO REQUIRE 
		   DOIT INVOLVEMENT FOR OUTSIDE USERS.

		   DO WE ALLOW OUTSIDE USERS TO CREATE USER ACCOUNTS AND SET THEIR OWN PASSWORDS?
		   NEEDED IF BID SYSTEM IS PART OF PROJEX 4.
		   DO WE USE LOCALLY STORED PASSWORDS FOR OUTSIDE USERS?

		WHAT ABOUT OPENID OR SOMEOTHER FORM OF OUTSIDE IDENTITY STANDARD?

		   WE COULD ALLOW OPENID AUTHENTICATION TO THE BIG SERVICE PROVIDERS 
		   (GOOGLE, YAHOO, FACEBOOK) SO THAT OUTSIDE USERS COULD USE THOSE 
		   PASSWORDS ALSO.  DOES THIS OPEN UP ANY PRIVACY CONCERNS?   

	           FOR INTERNAL EMPLOYEES, WE COULD CREATE AN OPENID PROVIDER THAT GOES
		   AGAINST THE LDAP SERVER.  FOR LOCAL PASSWORDS, WE COULD CREATE AN 
		   OPENID PROVIDER THAT GOES AGAINST THE STORED PASSWORD.

	2.  SHOULD WE STORE THE PASSWORDS ONCE THEY ARE AUTHENTICATED AS A BACK UP METHOD
	    IF THE PRIMARY AUTHENTICATION IS UNAVAILABLE?

		IT WOULD BE BEST SECURITY NOT TO STORE ANY PASSWORDS AT ALL.  
		IT WOULD BE BETTER SECURITY NOT TO STORE ANY PASSWORDS
		IN THE SYSTEM IN A WAY THAT CAN BE EXPOSED TO THE GENERAL WORLD.

		WE DO THIS IN TED FOR THE LDAP AUTHENTICATION - BUT IF WE DO THIS, 
		WE SHOULD STORE ONE-WAY ENCRYPTED VALUES ONLY UNLIKE TED.

		WE WOULD NOT BE ABLE TO DO THIS IF WE USE OPENID - SINCE THE WAY 
		THE PROTOCOL WORKS IS THAT WE DO NOT SEE THE PASSWORD ENTERED AT ALL - 
			THEIR SERVICE JUST SENDS A VERIFICATION TOKEN TO US.

	3.  HOW DO WE IMPLEMENT USER AND GROUP LEVEL SECURITY?  
		
		ARE THERE ANY FIELDS IN PROJEX SCREENS THAT SHOULD NOT BE SEEN
		BY PEOPLE WHO HAVE ACCESS TO A SCREEN?

			THIS IS TRICKY, CURRENTLY IN PROJEX 3 WE HAVE CERTAIN COMMENT 
			FIELDS THAT PROBABLY SHOULD NOT BE SEEN BY OUTSIDE PEOPLE.  
			THESE SHOULD BE SEPARATED OUT INTO THE NOTES SYSTEM.

		ARE THERE FIELDS, APART FROM CALCULATED FIELDS, IN PROJEX 
		SCREENS THAT SHOULD NOT BE EDITED BY PEOPLE WHO HAVE EDIT 
		ACCESS TO A SCREEN?

		SHOULD WE DO GROUP BASED SECURITY OR ROLE BASED SECURITY OR A
		MIX OF THE TWO?

			MAXIMO AND TED USE GROUP BASED SECURITY.

			PROJEX 3 USES A MIXTURE OF GROUP/INDIVIDUAL AND ROLE BASED SECURITY.
			IT USES GROUP BASED SECURITY FOR ACCESSING THE SITES AND THEN IN 
			THE FEW PLACES WE HAVE SECURITY RESTRICTIONS IT IS EITHER ROLE BASED
			OR BASED ON AN INDIVIDUAL SECURITY EXCEPTIONS. ROLE BASED SECURITY IS 
			HARD CODED INTO THE PROGRAM.

		WHAT ROLE SHOULD SITE PLAY IN THE SECURITY MODEL?  
			
			CURRENTLY VIRTUAL PRIVATE DATABASING IS USED TO RESTRICT USERS
			FROM ACCESSING SITES OTHER THAN THEIR OWN.  WE USED VPD BECAUSE OF 
			THE ASSUMPTION THAT USERS WOULD BE QUERYING THE DATABASE 
			FREQUENTLY ON THEIR OWN.  THIS HASN'T HAPPENED AND THE VPD STUFF
			JUST ADDS HASSLE THAT WE DON'T REALLY NEED.  WE WILL NOT USE IT 
			IN PROJEX 4.  IF USERS NEED TO QUERY THE DATABASE DIRECTLY, WE WILL 
			DEAL WITH IT USING VIEWS AND READ-ONLY GRANTS.

*/
