/* 
	SECURITYGROUPUSERS

	ASSOCIATE USERS INTO SECURITYGROUPS 
	PK FROM SECURITYGROUPUSERSEQ;
*/
CREATE SEQUENCE SECURITYGROUPUSERSEQ;
CREATE TABLE SECURITYGROUPUSERS (
	ID VARCHAR2(10) NOT NULL, 
	ROWSTAMP VARCHAR2(10) NOT NULL,
	SECURITYGROUPID VARCHAR2(10) NOT NULL,
	USERID VARCHAR2(10) NOT NULL,
	CREATED DATE NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT SECURITYGROUPUSERS_U UNIQUE (SECURITYGROUPID, USERID),
	CONSTRAINT SECURITYGROUPUSERS_FK1 FOREIGN KEY (SECURITYGROUPID) REFERENCES SECURITYGROUPS (ID),
	CONSTRAINT SECURITYGROUPUSERS_FK2 FOREIGN KEY (USERID) REFERENCES USERS (ID)
);

CREATE OR REPLACE TRIGGER SECURITYGROUPUSERS_T 
BEFORE INSERT OR UPDATE ON SECURITYGROUPUSERS
FOR EACH ROW
DECLARE 
	OBJECTMODIFICATION EXCEPTION;
BEGIN
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;
	SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;
	EXCEPTION 
	   WHEN OBJECTMODIFICATION THEN
		RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another user');
END;
/

CREATE INDEX SECURITYGROUPUSERS_IDX1 ON SECURITYGROUPUSERS (SECURITYGROUPID);
CREATE INDEX SECURITYGROUPUSERS_IDX2 ON SECURITYGROUPUSERS (USERID);



