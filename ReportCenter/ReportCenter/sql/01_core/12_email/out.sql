CREATE SEQUENCE EMAILTEMPLATESEQ;

CREATE TABLE EMAILTEMPLATES (
	ID VARCHAR2(10) NOT NULL,
	ROWSTAMP VARCHAR2(10) NOT NULL,
	EMAILNAME VARCHAR2(200),
	EMAILSUBJECT VARCHAR2(200),
	CONTENT VARCHAR2(4000),
	HELPTEXT VARCHAR2(200),
	ISACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
	CREATEDBY VARCHAR2(10) NOT NULL,
	CREATED TIMESTAMP NOT NULL,
	MODIFIEDBY VARCHAR2(10) NOT NULL,
	MODIFIED TIMESTAMP NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT EMAIL_U UNIQUE (EMAILNAME,EMAILSUBJECT)
);

CREATE OR REPLACE TRIGGER EMAILTEMPLATES_T 
BEFORE INSERT OR UPDATE ON EMAILTEMPLATES
FOR EACH ROW
DECLARE 
	OBJECTMODIFICATION EXCEPTION;
BEGIN
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;

	SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;
	EXCEPTION 
	   WHEN OBJECTMODIFICATION THEN
	   RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another user');
END;
/
CREATE SEQUENCE EMAILLOGSEQ;

CREATE TABLE EMAILLOGS (
	ID VARCHAR2(10) NOT NULL,
	EMAILADDRESS VARCHAR2(50) NOT NULL,
	SENDDATE TIMESTAMP,
	STATUSMESSAGE VARCHAR2(500),
	PRIMARY KEY (ID)
);

CREATE OR REPLACE PACKAGE EMAIL AS

FUNCTION EMAILTEMPLATE (VID IN VARCHAR2, VROWSTAMP IN VARCHAR2, VEMAILNAME IN VARCHAR2, VEMAILSUBJECT IN VARCHAR2, VCONTENT IN VARCHAR2, VHELPTEXT IN VARCHAR2,
	VISACTIVE IN NUMBER, VCREATEDBY IN VARCHAR2, VCREATED IN TIMESTAMP, VMODIFIEDBY IN VARCHAR2, VMODIFIED IN TIMESTAMP) RETURN VARCHAR2;
	
PROCEDURE EMAILTEMPLATE (VEMAILNAME IN VARCHAR2, VEMAILSUBJECT IN VARCHAR2, VCONTENT IN VARCHAR2);

FUNCTION EMAILLOG (VID IN VARCHAR2, VEMAILADDRESS IN VARCHAR2, VSENDDATE IN TIMESTAMP, VSTATUSMESSAGE IN VARCHAR2) RETURN VARCHAR2;
	
END EMAIL;
/

SHO ERRORS;

CREATE OR REPLACE PACKAGE BODY EMAIL AS

FUNCTION EMAILTEMPLATE (VID IN VARCHAR2, VROWSTAMP IN VARCHAR2, VEMAILNAME IN VARCHAR2, VEMAILSUBJECT IN VARCHAR2, VCONTENT IN VARCHAR2, VHELPTEXT IN VARCHAR2,
	VISACTIVE IN NUMBER, VCREATEDBY IN VARCHAR2, VCREATED IN TIMESTAMP, VMODIFIEDBY IN VARCHAR2, VMODIFIED IN TIMESTAMP) RETURN VARCHAR2 IS
NID VARCHAR2(10);	
BEGIN
	IF VID IS NULL THEN
		SELECT EMAILTEMPLATESEQ.NEXTVAL INTO NID FROM DUAL;
	ELSE 
		NID := VID;
	END IF;
	
	MERGE INTO EMAILTEMPLATES A
	USING (SELECT ID FROM (SELECT ID FROM EMAILTEMPLATES WHERE ID = NID UNION ALL SELECT NULL ID FROM DUAL) WHERE ROWNUM = 1) B
	ON (A.ID = B.ID)
	WHEN MATCHED THEN 
	UPDATE SET A.ROWSTAMP = VROWSTAMP, A.EMAILNAME = VEMAILNAME, A.EMAILSUBJECT = VEMAILSUBJECT,
		A.CONTENT = VCONTENT, A.HELPTEXT = VHELPTEXT, A.ISACTIVE = VISACTIVE, A.CREATEDBY = VCREATEDBY,
		A.CREATED = VCREATED, A.MODIFIEDBY = VMODIFIEDBY, A.MODIFIED = VMODIFIED
	WHEN NOT MATCHED THEN
	INSERT (A.ID, A.ROWSTAMP, A.EMAILNAME, A.EMAILSUBJECT, A.CONTENT, A.HELPTEXT, A.ISACTIVE,
		A.CREATEDBY, A.CREATED, A.MODIFIEDBY, A.MODIFIED) VALUES
		(NID, VROWSTAMP, VEMAILNAME, VEMAILSUBJECT, VCONTENT, VHELPTEXT, VISACTIVE, VCREATEDBY, VCREATED, VMODIFIEDBY, VMODIFIED );

	IF SQL%ROWCOUNT = 0 THEN
		NID := NULL;
	END IF;

	RETURN NID;	
END EMAILTEMPLATE;

/* Used for initial loading of data */
PROCEDURE EMAILTEMPLATE (VEMAILNAME IN VARCHAR2, VEMAILSUBJECT IN VARCHAR2, VCONTENT IN VARCHAR2) IS
NID VARCHAR2(10);
PROJEX4ID VARCHAR2(10);
NOW TIMESTAMP;
BEGIN
	SELECT ID INTO PROJEX4ID FROM USERS WHERE USERLOGIN = 'PROJEX4';
	SELECT SYSDATE INTO NOW FROM DUAL;
	NID := EMAILTEMPLATE(null, 'AAAA',VEMAILNAME, VEMAILSUBJECT, VCONTENT, null, 1, PROJEX4ID, NOW, PROJEX4ID, NOW);
END EMAILTEMPLATE;

FUNCTION EMAILLOG (VID IN VARCHAR2, VEMAILADDRESS IN VARCHAR2, VSENDDATE IN TIMESTAMP , VSTATUSMESSAGE IN VARCHAR2) RETURN VARCHAR2 IS
NID VARCHAR2(10);	
BEGIN

	IF VID IS NULL THEN
		SELECT EMAILLOGSEQ.NEXTVAL INTO NID FROM DUAL;
	ELSE 
		NID := VID;
	END IF;
	
	MERGE INTO EMAILLOGS A
	USING (SELECT ID FROM (SELECT ID FROM EMAILLOGS WHERE ID = NID UNION ALL SELECT NULL ID FROM DUAL) WHERE ROWNUM = 1) B
	ON (A.ID = B.ID)
	WHEN MATCHED THEN 
	UPDATE SET A.EMAILADDRESS = VEMAILADDRESS, A.SENDDATE = VSENDDATE, A.STATUSMESSAGE = VSTATUSMESSAGE
	WHEN NOT MATCHED THEN
	INSERT (A.ID, A.EMAILADDRESS, A.SENDDATE, A.STATUSMESSAGE ) VALUES
		(NID, VEMAILADDRESS, VSENDDATE, VSTATUSMESSAGE);

	IF SQL%ROWCOUNT = 0 THEN
		NID := NULL;
	END IF;

	RETURN NID;	

END EMAILLOG;

END EMAIL;
/

SHO ERRORS
