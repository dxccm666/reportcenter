CREATE SEQUENCE REPORTCRONTASKSEQ;

CREATE TABLE REPORTCRONTASKS (
	ID VARCHAR2(10) NOT NULL,
	ROWSTAMP VARCHAR2(10) NOT NULL,
	REPORTID VARCHAR2(10) NOT NULL,
	SCHEDULEDBY VARCHAR2(10) NOT NULL,
	SCHEDULED TIMESTAMP NOT NULL,
	CRONEXPRESSION VARCHAR2(200) NOT NULL,
	ISACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
	FILEFORMAT VARCHAR2(200) NOT NULL,
	ISONETIME NUMBER(1) DEFAULT 0 NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT REPORTCRONTASKS_U UNIQUE (REPORTID, SCHEDULEDBY, CRONEXPRESSION),
	CONSTRAINT REPORTCRONTASKS_FK1 FOREIGN KEY (REPORTID) REFERENCES REPORTS (ID),
	CONSTRAINT REPORTCRONTASKS_FK2 FOREIGN KEY (SCHEDULEDBY) REFERENCES USERS (ID)
);

CREATE OR REPLACE TRIGGER REPORTCRONTASKS_T 
BEFORE INSERT OR UPDATE ON REPORTCRONTASKS
FOR EACH ROW
DECLARE 
	OBJECTMODIFICATION EXCEPTION;
BEGIN
	
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;

	SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;
	EXCEPTION 
	   WHEN OBJECTMODIFICATION THEN
	   RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another u
ser');
END;
/

CREATE INDEX REPORTCRONTASKS_IDX1 ON REPORTCRONTASKS (ISACTIVE);
CREATE INDEX REPORTCRONTASKS_IDX2 ON REPORTCRONTASKS (REPORTID);
CREATE INDEX REPORTCRONTASKS_IDX3 ON REPORTCRONTASKS (SCHEDULEDBY);
