CREATE SEQUENCE REPORTCRONTASKPARAMETERSEQ;

CREATE TABLE REPORTCRONTASKPARAMETERS (
	ID	VARCHAR2(10) NOT NULL,
	ROWSTAMP VARCHAR2(10) NOT NULL,
	REPORTCRONTASKID VARCHAR2(10) NOT NULL,
	PARAMETERNUMBER NUMBER(5) NOT NULL,
	PARAMETERTYPE VARCHAR2(20) NOT NULL,
	PARAMETERNAME VARCHAR2(100) NOT NULL,
	PARAMETERVALUE VARCHAR2(1000) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT REPORTCRONTASKPARAMETER_FK1 FOREIGN KEY (REPORTCRONTASKID) REFERENCES REPORTCRONTASKS (ID)
);

CREATE OR REPLACE TRIGGER REPORTCRONTASKPARAMETERS_T 
BEFORE INSERT OR UPDATE ON REPORTCRONTASKPARAMETERS
FOR EACH ROW
DECLARE 
	OBJECTMODIFICATION EXCEPTION;
BEGIN
	
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;

	SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;
	EXCEPTION 
	   WHEN OBJECTMODIFICATION THEN
	   RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another u
ser');
END;
/

CREATE INDEX REPORTCRONTASKPARAMETERS_IDX1 ON REPORTCRONTASKPARAMETERS (REPORTCRONTASKID);
