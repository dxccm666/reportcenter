CREATE SEQUENCE SECURITYGROUPREPORTSEQ;

CREATE TABLE SECURITYGROUPREPORTS (
	ID VARCHAR2(10) NOT NULL,
	ROWSTAMP VARCHAR2(10) NOT NULL,
	SECURITYGROUPID VARCHAR2(10) NOT NULL,
	REPORTID VARCHAR2(10) NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT SECURITYGROUPREPORTS_U UNIQUE (SECURITYGROUPID, REPORTID),
	CONSTRAINT SECURITYGROUPREPORTS_FK1 FOREIGN KEY (SECURITYGROUPID) REFERENCES SECURITYGROUPS (ID),
	CONSTRAINT SECURITYGROUPREPORTS_FK2 FOREIGN KEY (REPORTID) REFERENCES REPORTS (ID)
);

CREATE OR REPLACE TRIGGER SECURITYGROUPREPORTS_T 
BEFORE INSERT OR UPDATE ON SECURITYGROUPREPORTS
FOR EACH ROW
DECLARE 
	OBJECTMODIFICATION EXCEPTION;
BEGIN
	IF UPDATING AND NOT :NEW.ROWSTAMP = :OLD.ROWSTAMP THEN
		RAISE OBJECTMODIFICATION;
	END IF;
	SELECT DBMS_RANDOM.STRING('U',10) INTO :NEW.ROWSTAMP FROM DUAL;
	EXCEPTION 
	   WHEN OBJECTMODIFICATION THEN
		RAISE_APPLICATION_ERROR(-20100,'Record has been modified by another user');
END;
/

CREATE INDEX SECURITYGROUPREPORTS_IDX1 ON SECURITYGROUPREPORTS (SECURITYGROUPID);
CREATE INDEX SECURITYGROUPREPORTS_IDX2 ON SECURITYGROUPREPORTS (REPORTID);
